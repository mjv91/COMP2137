#!/bin/bash

# system_report_v2.sh
# I have corrected a few things, for one as you can see I added it alot more comments and details
# I have also changed the output format, I hope I was understanding your example properly
# I just want to say thank you for taking the time to review my assignment again. Thank you
# Author: Micheal Verconich
# Student ID: 200386136
# Purpose: This script generates a structured and human-readable report that details
# system identity, hardware, network, and usage information on my virtual machines system.
# It is formatted to match a strict output template provided by the course instructor.
#
# Difficulties Encountered:
# - Properly formatting disk space when mount points included spaces (e.g., ISO labels)
# - Ensuring clean alignment across dynamic values, especially with disk and RAM sizes
# - Getting make and model info from virtualized hardware (especially inside VMware)
# - Filtering unwanted lines (e.g., loop devices, CD-ROMs) from disk and network outputs
#
# Upon the advice of yourself I have changed the way 
# The final output uses a tample formatting style instead of a constant echo.

# Auto-elevate if not running as root
if [ "$EUID" -ne 0 ]; then
  exec sudo "$0" "$@"
fi

# Load OS info
source /etc/os-release

# Collect values into variables, these were all pretty much straight forward commands and experienced no difficulties
hostname=$(hostname)
username=$(logname)
datetime=$(date)
os="$NAME $VERSION"
uptime=$(uptime -p)
cpu=$(lshw -class processor 2>/dev/null | grep "product" | head -n 1 | cut -d: -f2 | xargs)
ram=$(free -h | awk '/Mem:/ {print $2}')

# Disk info - show make, model, and size, redirect any  error fields to null, 
# This i ran into obtaining unnecessary information which would produce errors for me.
# This was resolved by sending those unnncessary outputs to null
disks=$(lshw -class disk 2>/dev/null | awk -F: '
  /product:/ {gsub(/^[ \t]+/, "", $2); model=$2}
  /size:/ {gsub(/^[ \t]+/, "", $2); print "  " model " - " $2}
')

# Video info, redirect any errors fields to null to prevent unusable output
video=$(lshw -class display 2>/dev/null | grep "product" | head -n 1 | cut -d: -f2 | xargs)

# IP info, including address fron vm network drive , ens33 as well as the default gateway
ipaddr=$(ip -4 addr show ens33 | awk '/inet / {print $2}' | cut -d/ -f1)
gateway=$(ip route | awk '/default/ {print $3}')
dns=$(grep nameserver /etc/resolv.conf | awk '{print $2}' | head -n 1)

# Logged in users (unique), Straight forward command
users=$(who | awk '{print $1}' | sort | uniq | paste -sd, -)

# Disk space, formatted with padding, including long mount paths
# This provided me great stress and complication, as i could not properly figure out how
# To allign the diskspace in a way that would make it semetrical with the entire output
# As you can see the issue still remains and am looking into it further for correction
diskspace=$(df -h --output=target,avail -x tmpfs -x devtmpfs | awk 'NR>1 {printf "  %-40s %6s\n", substr($0, 1, length($0)-length($NF)-1), $NF}')

# The following four commands where fairly straight forward
# Process count 
proccount=$(ps aux | wc -l)

# Load averages
loadavg=$(uptime | awk -F'load average: ' '{print $2}')

# Listening ports, this command i had to look up specifics for in order to filter the information correctly
ports=$(ss -tuln | awk 'NR>1 {split($5,a,":"); print a[length(a)]}' | sort -n | uniq | paste -sd, -)

# UFW status
ufwstatus=$(ufw status | awk '/Status:/ {print $2}')

# Output using template format, at the advice of yourself, this keeps the script clean
# Redirects all variable information to template which is that produced for the user
cat <<EOF

System Report for $hostname generated by $username, on $datetime

System Information
------------------
OS: $os
Uptime: $uptime
CPU: $cpu
RAM: $ram
Disk(s):$disks
Video: $video
Host Address: $ipaddr
Gateway IP: $gateway
DNS Server: $dns

System Status
-------------
Users Logged In: $users
Disk Space:
$diskspace
Process Count: $proccount
Load Averages: $loadavg
Listening Network Ports: $ports
UFW Status: $ufwstatus

EOF

