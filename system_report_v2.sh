#!/bin/bash

# system_report_v2.sh
# Author: Micheal Verconich
# Student ID: 200386136
# Purpose: This script generates a structured and human-readable report that details
# system identity, hardware, network, and usage information on my virtual machines system.
# It is formatted to match a strict output template provided by the course instructor.
#
# Difficulties Encountered:
# - Properly formatting disk space when mount points included spaces (e.g., ISO labels)
# - Ensuring clean alignment across dynamic values, especially with disk and RAM sizes
# - Getting make and model info from virtualized hardware (especially inside VMware)
# - Filtering unwanted lines (e.g., loop devices, CD-ROMs) from disk and network outputs
#
# The final output uses a here-document to enforce template formatting.

# Auto-elevate if not running as root
if [ "$EUID" -ne 0 ]; then
  exec sudo "$0" "$@"
fi

# Load OS info
source /etc/os-release

# Collect values into variables
hostname=$(hostname)
username=$(logname)
datetime=$(date)
os="$NAME $VERSION"
uptime=$(uptime -p)
cpu=$(lshw -class processor 2>/dev/null | grep "product" | head -n 1 | cut -d: -f2 | xargs)
ram=$(free -h | awk '/Mem:/ {print $2}')

# Disk info - show make, model, and size
disks=$(lshw -class disk 2>/dev/null | awk -F: '
  /product:/ {gsub(/^[ \t]+/, "", $2); model=$2}
  /size:/ {gsub(/^[ \t]+/, "", $2); print "  " model " - " $2}
')

# Video info
video=$(lshw -class display 2>/dev/null | grep "product" | head -n 1 | cut -d: -f2 | xargs)

# IP info
ipaddr=$(ip -4 addr show ens33 | awk '/inet / {print $2}' | cut -d/ -f1)
gateway=$(ip route | awk '/default/ {print $3}')
dns=$(grep nameserver /etc/resolv.conf | awk '{print $2}' | head -n 1)

# Logged in users (unique)
users=$(who | awk '{print $1}' | sort | uniq | paste -sd, -)

# Disk space, formatted with padding, including long mount paths
diskspace=$(df -h --output=target,avail -x tmpfs -x devtmpfs | awk 'NR>1 {printf "  %-40s %6s\n", substr($0, 1, length($0)-length($NF)-1), $NF}')

# Process count
proccount=$(ps aux | wc -l)

# Load averages
loadavg=$(uptime | awk -F'load average: ' '{print $2}')

# Listening ports
ports=$(ss -tuln | awk 'NR>1 {split($5,a,":"); print a[length(a)]}' | sort -n | uniq | paste -sd, -)

# UFW status
ufwstatus=$(ufw status | awk '/Status:/ {print $2}')

# Output using template format
cat <<EOF

System Report for $hostname generated by $username, on $datetime

System Information
------------------
OS: $os
Uptime: $uptime
CPU: $cpu
RAM: $ram
Disk(s):$disks
Video: $video
Host Address: $ipaddr
Gateway IP: $gateway
DNS Server: $dns

System Status
-------------
Users Logged In: $users
Disk Space:
$diskspace
Process Count: $proccount
Load Averages: $loadavg
Listening Network Ports: $ports
UFW Status: $ufwstatus

EOF

